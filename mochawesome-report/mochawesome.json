{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-16T10:52:02.948Z",
    "end": "2021-04-16T10:54:09.028Z",
    "duration": 126080,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a987de16-6016-4636-8f4b-3f24ca1b16dc",
      "title": "",
      "fullFile": "cypress/integration/cadastro.feature",
      "file": "cypress/integration/cadastro.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
          "title": "tela de cadastro de login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Realizar cadastro com sucesso",
              "fullTitle": "tela de cadastro de login Realizar cadastro com sucesso",
              "timedOut": null,
              "duration": 42610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "09d19a39-8b5a-40bf-b1e4-7b51149bb566",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar cadastro sem preencher o nome",
              "fullTitle": "tela de cadastro de login Realizar cadastro sem preencher o nome",
              "timedOut": null,
              "duration": 10064,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "867d30b1-eef8-4ac7-9d92-69a06572babe",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar cadastro sem preencher o email",
              "fullTitle": "tela de cadastro de login Realizar cadastro sem preencher o email",
              "timedOut": null,
              "duration": 5760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "77f9eaa1-56ae-4244-87c8-04308ac99f2b",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar cadastro sem preencher a senha",
              "fullTitle": "tela de cadastro de login Realizar cadastro sem preencher a senha",
              "timedOut": null,
              "duration": 6399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "045c907d-623e-4b17-b14b-7fdf481a5e82",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar cadastro sem preencher o segundo nome",
              "fullTitle": "tela de cadastro de login Realizar cadastro sem preencher o segundo nome",
              "timedOut": null,
              "duration": 5988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "87453411-b748-4556-855c-f90ae57eee2f",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar cadastro preenchendo um email inválido",
              "fullTitle": "tela de cadastro de login Realizar cadastro preenchendo um email inválido",
              "timedOut": null,
              "duration": 5683,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "74999d95-1f13-4998-99c5-abaa46a5ac0d",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Realizar cadastro com senha menor que oito digitos",
              "fullTitle": "tela de cadastro de login Realizar cadastro com senha menor que oito digitos",
              "timedOut": null,
              "duration": 7038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6be3dfb6-d336-432c-bd12-4c4bdd41ed84",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Excluir registro existente",
              "fullTitle": "tela de cadastro de login Excluir registro existente",
              "timedOut": null,
              "duration": 5450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "76e52f5c-85ea-46ba-a9b4-646195799931",
              "parentUUID": "4a8212d0-c905-44cb-867e-dbfc3a97c241",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09d19a39-8b5a-40bf-b1e4-7b51149bb566",
            "867d30b1-eef8-4ac7-9d92-69a06572babe",
            "77f9eaa1-56ae-4244-87c8-04308ac99f2b",
            "045c907d-623e-4b17-b14b-7fdf481a5e82",
            "87453411-b748-4556-855c-f90ae57eee2f",
            "74999d95-1f13-4998-99c5-abaa46a5ac0d",
            "6be3dfb6-d336-432c-bd12-4c4bdd41ed84",
            "76e52f5c-85ea-46ba-a9b4-646195799931"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88992,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "overwrite": false
      },
      "version": "5.2.0"
    }
  }
}